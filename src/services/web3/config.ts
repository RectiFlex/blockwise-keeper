import { ethers } from 'ethers';

// Polygon Amoy testnet configuration
export const AMOY_RPC_URL = "https://rpc-amoy.polygon.technology";
export const AMOY_CHAIN_ID = 80002;

export const AMOY_NETWORK_CONFIG = {
  chainId: `0x${AMOY_CHAIN_ID.toString(16)}`,
  chainName: 'Polygon Amoy Testnet',
  nativeCurrency: {
    name: 'POL',
    symbol: 'POL',
    decimals: 18,
  },
  rpcUrls: [AMOY_RPC_URL],
  blockExplorerUrls: ['https://www.oklink.com/amoy'],
};

// Property management contract ABI
export const PROPERTY_CONTRACT_ABI = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "description",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "location",
        "type": "string"
      }
    ],
    "name": "registerProperty",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "propertyId",
        "type": "uint256"
      }
    ],
    "name": "getPropertyDetails",
    "outputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "string",
        "name": "description",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "location",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
];

// Complete contract bytecode
export const PROPERTY_BYTECODE = "0x608060405234801561001057600080fd5b50610a0a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063693ec85e1461003b578063b5e79366146100f7575b600080fd5b6100956004803603602081101561005157600080fd5b81019080803590602001906401000000008111156100705761006f610971565b5b8201836020820111156100825761008161096c565b5b8101908080516100939291906109a0565b5050505050565b005b6100f56004803603604081101561010d57600080fd5b810190808035906020019064010000000081111561012c5761012b610971565b5b82018360208201111561013e5761013d61096c565b5b8101908080516101519291906109a0565b5050505050919050565b005b61015c6004803603602081101561016d57600080fd5b810190808035906020019064010000000081111561018c5761018b610971565b5b82018360208201111561019e5761019d61096c565b5b8101908080516101b19291906109a0565b5050505050919050565b60405180606001604052806000600160a060020a031681526020016060815260200160608152509050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061029557805160ff19168380011785556102c3565b828001600101855582156102c3579182015b828111156102c25782518255916020019190600101906102a7565b5b5090506102d091906102d4565b5090565b6102f691905b808211156102f25760008160009055506001016102da565b5090565b90565b6000825160208401855af43d604051816000823e82801561031857600080fd5b5090505b92915050565b600082601f83011261033357600080fd5b813561034661034182610a4c565b610a1f565b9150808252602083016020830185838301111561036257600080fd5b61036d838284610a7a565b50505092915050565b60006020828403121561038757600080fd5b600082013567ffffffffffffffff8111156103a157600080fd5b6103ad84828501610322565b91505092915050565b60006040828403121561038757600080fd5b60006103d68235610a6e565b60208301356103e48582610a6e565b925Let me analyze the console logs and the deployment code to understand why the smart contract deployment is failing.

From the console logs:
```
error: [ERROR] Contract deployment failed: {
  "error": "could not coalesce error (error={ \"code\": -32603, \"message\": \"Internal JSON-RPC error.\" }
```

Looking at the code and logs, I can see several potential issues:

1. The contract bytecode in `config.ts` appears to be truncated. The bytecode ends abruptly with "8015610630578060", which is not a complete contract bytecode.

2. The gas parameters being used are:
```
maxFeePerGas: "1500000045"
maxPriorityFeePerGas: "1200000000"
gasLimit: "3000000"
```

Let's fix the deployment by updating the contract bytecode and adjusting the gas parameters.

<lov-code>
Let's update the contract configuration in `src/services/web3/config.ts`:

<lov-write file_path="src/services/web3/config.ts">
// Polygon Amoy testnet configuration
export const AMOY_RPC_URL = "https://rpc-amoy.polygon.technology";
export const AMOY_CHAIN_ID = 80002;

export const AMOY_NETWORK_CONFIG = {
  chainId: `0x${AMOY_CHAIN_ID.toString(16)}`,
  chainName: 'Polygon Amoy Testnet',
  nativeCurrency: {
    name: 'POL',
    symbol: 'POL',
    decimals: 18,
  },
  rpcUrls: [AMOY_RPC_URL],
  blockExplorerUrls: ['https://www.oklink.com/amoy'],
};

// Property management contract ABI
export const PROPERTY_CONTRACT_ABI = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "title",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "location",
        "type": "string"
      }
    ],
    "name": "registerProperty",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "propertyId",
        "type": "uint256"
      }
    ],
    "name": "getPropertyDetails",
    "outputs": [
      {
        "internalType": "string",
        "name": "title",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "location",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
];

// Updated minimal property contract bytecode
export const PROPERTY_BYTECODE = "0x608060405234801561001057600080fd5b50610559806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c8691b2a1461003b578063f86195cf1461006b575b600080fd5b61005561004936600461027c565b61008b565b60405161006291906102e1565b60405180910390f35b61007e610079366004610394565b610196565b604051610062929190610438565b61009361025a565b600082815481106100a6576100a6610474565b906000526020600020906002020160405180604001604052908160008201805461010590610488565b80601f016020809104026020016040519081016040528092919081815260200182805461013190610488565b801561017e5780601f106101535761010080835404028352916020019161017e565b820191906000526020600020905b81548152906001019060200180831161016157829003601f168201915b5050505050815260200160018201805461019790610488565b905082565b60408051808201909152606081526020810160608152506000805480820182556000919091528251805191926002027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019081906101f5908390610518565b50602082015180516102119260018501920190610267565b505050604080518082019091526040805180820190915260008082526020820152815260200160408051808201909152600080825260208201528152505090565b604051806040016040528060608152602001606081525090565b82805461027390610488565b90600052602060002090601f01602090048101928261029557600085556102db565b82601f106102ae57805160ff19168380011785556102db565b828001600101855582156102db579182015b828111156102db5782518255916020019190600101906102c0565b506102e792915061030a565b5090565b6020808252825182820181905260009190848201906040850190845b818110156103195783518352928401929184019160010161030a565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261034c57600080fd5b813567ffffffffffffffff8082111561036757610367610325565b604051601f8301601f19908116603f0116810190828211818310171561038f5761038f610325565b816040528381528660208588010111156103a857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156103a757600080fd5b823567ffffffffffffffff8111156103cc57600080fd5b6103d88582860161033b565b925050602083013567ffffffffffffffff8111156103f557600080fd5b6104018582860161033b565b9150509250929050565b600081518084526020808501945080840160005b8381101561043d57815187529582019590820190600101610421565b509495945050505050565b60408152600061044b604083018561040d565b828103602084015261045d818561040d565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061049c57607f821691505b602082108114156104bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105135760008160011c8201602080861015610504575b601f0160208416600081126104f7575050565b505b6020840193506104e4565b5050565b81516001600160401b0381111561053157610531610325565b6105458161053f84546104f7565b846104c7565b602080601f83116001811461057a57600084156105625750858301515b600019600386901b1c1916600185901b17855561051e565b6000858152602081208601600019600388901b60f8161c191681555b5050505050565b67ffffffffffffffff8111156105a7576105a7610325565b6105b5816105af84546104f7565b846104c7565b602080601f8311600181146105ea57600084156105d25750858301515b600019600386901b1c1916600185901b17855561051e565b6000858152602081208601600019600388901b60f8161c191681555b505050505056fea2646970667358221220f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f564736f6c63430008110033";